-- MySQL Script generated by MySQL Workbench
-- 01/11/15 19:10:28
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema eydokia
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `eydokia` ;

-- -----------------------------------------------------
-- Schema eydokia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `eydokia` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `eydokia` ;

-- -----------------------------------------------------
-- Table `eydokia`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eydokia`.`role` ;

CREATE TABLE IF NOT EXISTS `eydokia`.`role` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eydokia`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eydokia`.`user` ;

CREATE TABLE IF NOT EXISTS `eydokia`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NULL,
  `email` VARCHAR(64) NOT NULL,
  `full_name` VARCHAR(32) NULL,
  `phone` VARCHAR(16) NULL,
  `username` VARCHAR(16) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `extra_info` VARCHAR(64) NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `eydokia`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE UNIQUE INDEX `username_UNIQUE` ON `eydokia`.`user` (`username` ASC);

CREATE UNIQUE INDEX `email_UNIQUE` ON `eydokia`.`user` (`email` ASC);

CREATE INDEX `role_id_idx` ON `eydokia`.`user` (`role_id` ASC);


-- -----------------------------------------------------
-- Table `eydokia`.`room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eydokia`.`room` ;

CREATE TABLE IF NOT EXISTS `eydokia`.`room` (
  `room_id` INT NOT NULL AUTO_INCREMENT,
  `disabled` BIT(1) NULL,
  `name` VARCHAR(32) NULL,
  `description` TEXT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`room_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eydokia`.`schedule_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eydokia`.`schedule_type` ;

CREATE TABLE IF NOT EXISTS `eydokia`.`schedule_type` (
  `schedule_type_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NULL,
  PRIMARY KEY (`schedule_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eydokia`.`schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eydokia`.`schedule` ;

CREATE TABLE IF NOT EXISTS `eydokia`.`schedule` (
  `schedule_id` INT NOT NULL AUTO_INCREMENT,
  `schedule_type_id` INT NULL,
  `weak_day` TINYINT UNSIGNED NULL DEFAULT 0,
  `month_day` TINYINT UNSIGNED NULL DEFAULT 0,
  `month_weak` TINYINT UNSIGNED NULL DEFAULT 0,
  `year_day` TINYINT UNSIGNED NULL DEFAULT 0,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`schedule_id`),
  CONSTRAINT `schedule_type_id`
    FOREIGN KEY (`schedule_type_id`)
    REFERENCES `eydokia`.`schedule_type` (`schedule_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `schedule_type_id_idx` ON `eydokia`.`schedule` (`schedule_type_id` ASC);


-- -----------------------------------------------------
-- Table `eydokia`.`entry`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eydokia`.`entry` ;

CREATE TABLE IF NOT EXISTS `eydokia`.`entry` (
  `entry_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `room_id` INT NULL,
  `schedule_id` INT NULL,
  `status` TINYINT NULL DEFAULT 0,
  `start_date` DATE NOT NULL,
  `start_time` TIME NOT NULL,
  `end_date` DATE NOT NULL,
  `end_time` TIME NOT NULL,
  `description` TEXT NULL,
  `info_user` VARCHAR(32) NULL,
  `info_text` TEXT NULL,
  `info_time` DATETIME NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`entry_id`),
  CONSTRAINT `room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `eydokia`.`room` (`room_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `eydokia`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `schedule_id`
    FOREIGN KEY (`schedule_id`)
    REFERENCES `eydokia`.`schedule` (`schedule_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `room_id_idx` ON `eydokia`.`entry` (`room_id` ASC);

CREATE INDEX `user_id_idx` ON `eydokia`.`entry` (`user_id` ASC);

CREATE INDEX `schedule_id_idx` ON `eydokia`.`entry` (`schedule_id` ASC);

USE `eydokia` ;

-- -----------------------------------------------------
-- Placeholder table for view `eydokia`.`room_entry`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eydokia`.`room_entry` (`room_name` INT, `full_name` INT, `start_time` INT, `end_time` INT, `name` INT, `entry_id` INT, `entry_room_id` INT, `entry_user_id` INT, `entry_schedule_id` INT, `status` INT, `user_id` INT, `schedule_id` INT, `schedule_schedule_type_id` INT, `schedule_type_id` INT, `room_id` INT);

-- -----------------------------------------------------
-- View `eydokia`.`room_entry`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `eydokia`.`room_entry` ;
DROP TABLE IF EXISTS `eydokia`.`room_entry`;
USE `eydokia`;
CREATE  OR REPLACE VIEW `room_entry` AS select room.name as room_name, user.full_name, entry.start_time, entry.end_time, schedule_type.name, entry.entry_id, entry.room_id as entry_room_id, entry.user_id as entry_user_id, entry.schedule_id as entry_schedule_id, entry.status, user.user_id, schedule.schedule_id, schedule.schedule_type_id as schedule_schedule_type_id, schedule_type.schedule_type_id, room.room_id
	from user, room, entry, schedule, schedule_type
    where entry.schedule_id = schedule.schedule_id
    and entry.user_id = user.user_id
    and entry.room_id = room.room_id
    and schedule.schedule_type_id = schedule_type.schedule_type_id
;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
